// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  recipes    Recipe[]
  favorites  Favorite[]
  bookmarks  Bookmark[]

  @@map("users")
}

model Recipe {
  id            String   @id @default(cuid())
  title         String
  description   String
  region        String
  prepTime      Int
  cookTime      Int
  difficulty    String
  rating        Float    @default(0)
  servings      Int
  image         String?
  ingredients   Json     // Array of objects with name, quantity, healthBenefits
  instructions  Json     // Array of strings
  healthBenefits Json    // Array of strings
  culturalStory String?
  tips          Json?    // Array of strings
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  authorId  String
  author    User       @relation(fields: [authorId], references: [id], onDelete: Cascade)
  favorites Favorite[]
  bookmarks Bookmark[]

  @@map("recipes")
}

model Favorite {
  id        String   @id @default(cuid())
  userId    String
  recipeId  String
  createdAt DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  recipe Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade)

  @@unique([userId, recipeId])
  @@map("favorites")
}

model Bookmark {
  id        String   @id @default(cuid())
  userId    String
  recipeId  String
  createdAt DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  recipe Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade)

  @@unique([userId, recipeId])
  @@map("bookmarks")
}
